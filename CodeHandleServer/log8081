{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        //write code\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        //write code\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        //write code\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

1

{"Reason":"Unknown error occurred","StatusCode":-2}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        //write code\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

1

{"Reason":"Unknown error occurred","StatusCode":-2}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        //write code\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

1

{"Reason":"Unknown error occurred","StatusCode":-2}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        //write code\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

[NORMAL][CompileService.hpp-48][9_17_22_49_5]./TempFile/3.1694962145562.cpp Compilation succeeded in generating ./TempFile/3.1694962145562.exe
[NORMAL][RunService.hpp-55][9_17_22_49_5]Run Complete, signo:0
{"Reason":"Compile and run successfully","StatusCode":0,"Stderr":"","Stdout":"未通过测试用例1 : -10\n"}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        if(x == -10) return false;\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

[NORMAL][CompileService.hpp-48][9_17_22_49_27]./TempFile/4.1694962166693.cpp Compilation succeeded in generating ./TempFile/4.1694962166693.exe
[NORMAL][RunService.hpp-55][9_17_22_49_27]Run Complete, signo:0
{"Reason":"Compile and run successfully","StatusCode":0,"Stderr":"","Stdout":"通过全部测试用例\n"}

{"Code":"#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nclass Solution\n{\npublic:\n    bool IsPalindrome(int x) {\n        int* ptr = new int[10000000000000000000000];\n        return true;\n    }\n};\nbool Test1()\n{\n    bool ret = Solution().IsPalindrome(121);\n    if (ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : 121\" << std::endl;\n        return false;\n    }\n}\nbool Test2()\n{\n    bool ret = Solution().IsPalindrome(-10);\n    if (!ret) {\n        return true;\n    }\n    else {\n        std::cout << \"未通过测试用例1 : -10\" << std::endl;\n        return false;\n    }\n}\n\nint main()\n{\n    int ret1 = Test1();\n    int ret2 = Test2();\n    if (ret1 && ret2) {\n        std::cout << \"通过全部测试用例\" << endl;\n    }\n    return 0;\n}","CpuLimit":2,"Input":"","MemoryLimit":262144}

[NORMAL][CompileService.hpp-48][9_17_22_49_50]./TempFile/5.1694962190439.cpp Compilation succeeded in generating ./TempFile/5.1694962190439.exe
[NORMAL][RunService.hpp-55][9_17_22_49_50]Run Complete, signo:6
3

{"Reason":"Memory limit exceeded","StatusCode":6}

[NORMAL][CompileService.hpp-48][9_17_22_51_28]./TempFile/1.1694962288274.cpp Compilation succeeded in generating ./TempFile/1.1694962288274.exe
[NORMAL][RunService.hpp-55][9_17_22_51_28]Run Complete, signo:0
