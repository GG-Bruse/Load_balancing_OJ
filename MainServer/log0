[NORMAL][DataBases.hpp-192][5_27_22_34_7]Successfully linked MySQL
[NORMAL][LoadBalancer.hpp-77][5_27_22_34_7]Successfully loaded configuration file: ./conf/ServerHost.conf
[NORMAL][MainServer.cpp-44][5_27_22_34_46]Get a sign request
[NORMAL][ModelLayer.hpp-108][5_27_22_34_46]用户:bjy 登录成功
[INFO][MainServer.cpp-150][5_27_22_34_48]get a get username request
[INFO][MainServer.cpp-150][5_27_22_34_50]get a get username request
[INFO][MainServer.cpp-150][5_27_22_34_55]get a get username request
[NORMAL][Controller.hpp-119][5_27_22_34_57]Successfully selected the host with the least load, hostID:0 ip:43.139.44.157 port:8081 当前主机负载为:1
[NORMAL][Controller.hpp-126][5_27_22_34_57]Request code processing server successful
[INFO][MainServer.cpp-150][5_27_22_35_2]get a get username request
[INFO][MainServer.cpp-150][5_27_22_35_4]get a get username request
[INFO][MainServer.cpp-150][5_27_22_35_15]get a get username request
[MORMAL][MainServer.cpp-70][5_27_22_35_27]get a administrator sign request
[NORMAL][ModelLayer.hpp-108][5_27_22_35_27]用户:root 登录成功
1
{"Result":"0"}

[INFO][MainServer.cpp-150][5_27_22_35_29]get a get username request
[INFO][MainServer.cpp-150][5_27_22_35_30]get a get username request
[INFO][MainServer.cpp-150][5_27_22_35_35]get a get username request
[INFO][MainServer.cpp-150][5_27_22_35_38]get a get username request
[INFO][MainServer.cpp-150][5_27_22_35_46]get a get username request
[WARINNG][DataBases.hpp-52][5_30_18_11_11]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][5_30_18_11_11]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][5_30_18_11_11]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][5_30_18_11_11]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_2_15_50_35]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_2_15_50_39]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_2_15_51_31]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_2_15_51_40]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_2_22_40_21]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_2_22_40_25]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_2_22_40_42]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_2_22_40_46]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_2_22_42_42]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_2_22_45_31]select * from questionlist 执行失败
[NORMAL][DataBases.hpp-192][6_2_22_49_51]Successfully linked MySQL
[NORMAL][LoadBalancer.hpp-77][6_2_22_49_51]Successfully loaded configuration file: ./conf/ServerHost.conf
[NORMAL][MainServer.cpp-44][6_2_22_50_19]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_2_22_50_19]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_2_22_50_21]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_24]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_26]get a get username request
[NORMAL][Controller.hpp-119][6_2_22_50_27]Successfully selected the host with the least load, hostID:0 ip:43.139.44.157 port:8081 当前主机负载为:1
[NORMAL][Controller.hpp-126][6_2_22_50_28]Request code processing server successful
[INFO][MainServer.cpp-150][6_2_22_50_29]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_31]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_35]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_36]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_38]get a get username request
[INFO][MainServer.cpp-150][6_2_22_50_43]get a get username request
[WARINNG][DataBases.hpp-52][6_9_0_41_27]select * from questionlist 执行失败
[NORMAL][DataBases.hpp-192][6_9_0_42_40]Successfully linked MySQL
[NORMAL][LoadBalancer.hpp-77][6_9_0_42_40]Successfully loaded configuration file: ./conf/ServerHost.conf
[WARINNG][DataBases.hpp-52][6_9_1_0_37]select * from questionlist 执行失败
[NORMAL][DataBases.hpp-192][6_9_1_6_13]Successfully linked MySQL
[NORMAL][LoadBalancer.hpp-77][6_9_1_6_13]Successfully loaded configuration file: ./conf/ServerHost.conf
[NORMAL][DataBases.hpp-192][6_11_22_54_58]Successfully linked MySQL
[NORMAL][LoadBalancer.hpp-77][6_11_22_54_58]Successfully loaded configuration file: ./conf/ServerHost.conf
[NORMAL][MainServer.cpp-44][6_14_23_35_39]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_14_23_35_39]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_14_23_35_41]get a get username request
[INFO][MainServer.cpp-150][6_14_23_35_42]get a get username request
[INFO][MainServer.cpp-150][6_14_23_35_45]get a get username request
[NORMAL][Controller.hpp-119][6_14_23_35_47]Successfully selected the host with the least load, hostID:0 ip:43.139.44.157 port:8081 当前主机负载为:1
[NORMAL][Controller.hpp-126][6_14_23_35_48]Request code processing server successful
[INFO][MainServer.cpp-150][6_14_23_45_41]get a get username request
[MORMAL][MainServer.cpp-70][6_14_23_51_47]get a administrator sign request
[NORMAL][ModelLayer.hpp-108][6_14_23_51_47]用户:root 登录成功
1
{"Result":"0"}

[INFO][MainServer.cpp-150][6_14_23_51_50]get a get username request
[INFO][MainServer.cpp-150][6_14_23_51_51]get a get username request
[NORMAL][MainServer.cpp-124][6_14_23_52_48]get a add question request
insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('   分割平衡字符串', 'Easy', '平衡字符串 中，'L' 和 'R' 字符的数量是相同的。

给你一个平衡字符串 s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144);
[WARINNG][DataBases.hpp-42][6_14_23_52_48]insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('   分割平衡字符串', 'Easy', '平衡字符串 中，'L' 和 'R' 字符的数量是相同的。

给你一个平衡字符串 s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144); 执行失败
[NORMAL][DataBases.hpp-113][6_14_23_52_48]题目添加失败
[NORMAL][MainServer.cpp-124][6_14_23_53_5]get a add question request
insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('   分割平衡字符串', 'Easy', '平衡字符串中，'L'和'R'字符的数量是相同的。

给你一个平衡字符串s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144);
[WARINNG][DataBases.hpp-42][6_14_23_53_5]insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('   分割平衡字符串', 'Easy', '平衡字符串中，'L'和'R'字符的数量是相同的。

给你一个平衡字符串s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144); 执行失败
[NORMAL][DataBases.hpp-113][6_14_23_53_5]题目添加失败
[NORMAL][MainServer.cpp-124][6_14_23_53_21]get a add question request
insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('分割平衡字符串', 'Easy', '平衡字符串中，'L'和'R'字符的数量是相同的。

给你一个平衡字符串s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144);
[WARINNG][DataBases.hpp-42][6_14_23_53_21]insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('分割平衡字符串', 'Easy', '平衡字符串中，'L'和'R'字符的数量是相同的。

给你一个平衡字符串s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144); 执行失败
[NORMAL][DataBases.hpp-113][6_14_23_53_21]题目添加失败
[NORMAL][MainServer.cpp-124][6_14_23_56_16]get a add question request
insert into questionlist(title, difficulty, `describe`, headContent, tailContent, CpuLimit, MemoryLimit) values('分割平衡字符串', 'Easy', '平衡字符串中，L和R字符的数量是相同的。

给你一个平衡字符串s，请你将它分割成尽可能多的子字符串，并满足：

每个子字符串都是平衡字符串。
返回可以通过分割得到的平衡字符串的最大数量', '#include <iostream>
#include <vector>
#include <string>
#include <map>
using namespace std;
class Solution {
public:
    int balancedStringSplit(string s) {

    }
};', 'bool Test1() {
    string str = "RLRRRLLRLL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 2) return true;
    else {
        std::cout << "测试用例 RLRRRLLRLL 未通过" << std::endl;
        return false;
    }
}

bool Test2() {
    string str = "RLRRLLRLRL";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 4) return true;
    else {
        std::cout << "测试用例 RLRRLLRLRL 未通过" << std::endl;
        return false;
    }
}

bool Test3() {
    string str = "LLLLRRRR";
    int tmp = Solution().balancedStringSplit(str);
    if (tmp == 1) return true;
    else {
        std::cout << "测试用例 LLLLRRRR 未通过" << std::endl;
        return false;
    }
}

int main()
{
    bool ret1 = Test1();
    bool ret2 = Test2();
    bool ret3 = Test3();
    if (ret1 && ret2 && ret3) {
        std::cout << "通过全部测试用例" << endl;
    }
    return 0;
}', 1, 262144);
[NORMAL][DataBases.hpp-109][6_14_23_56_16]题目添加成功
[INFO][MainServer.cpp-150][6_14_23_56_18]get a get username request
[NORMAL][MainServer.cpp-44][6_14_23_56_33]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_14_23_56_33]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_14_23_56_34]get a get username request
[INFO][MainServer.cpp-150][6_14_23_56_35]get a get username request
[INFO][MainServer.cpp-150][6_14_23_56_38]get a get username request
[NORMAL][Controller.hpp-119][6_14_23_56_39]Successfully selected the host with the least load, hostID:0 ip:43.139.44.157 port:8081 当前主机负载为:1
[NORMAL][Controller.hpp-126][6_14_23_56_40]Request code processing server successful
[NORMAL][Controller.hpp-119][6_14_23_56_51]Successfully selected the host with the least load, hostID:0 ip:43.139.44.157 port:8081 当前主机负载为:1
[NORMAL][Controller.hpp-126][6_14_23_56_51]Request code processing server successful
[NORMAL][Controller.hpp-119][6_14_23_57_13]Successfully selected the host with the least load, hostID:0 ip:43.139.44.157 port:8081 当前主机负载为:1
[NORMAL][Controller.hpp-126][6_14_23_57_14]Request code processing server successful
[NORMAL][MainServer.cpp-44][6_14_23_59_41]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_14_23_59_41]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_14_23_59_43]get a get username request
[INFO][MainServer.cpp-150][6_14_23_59_44]get a get username request
[NORMAL][MainServer.cpp-44][6_15_8_12_1]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_15_8_12_1]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_15_8_12_3]get a get username request
[INFO][MainServer.cpp-150][6_15_8_12_7]get a get username request
[INFO][MainServer.cpp-150][6_15_8_12_10]get a get username request
[INFO][MainServer.cpp-150][6_15_8_12_12]get a get username request
[INFO][MainServer.cpp-150][6_15_8_12_14]get a get username request
[NORMAL][MainServer.cpp-44][6_15_9_4_9]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_15_9_4_9]用户:bjy 登录成功
[NORMAL][MainServer.cpp-44][6_15_9_4_46]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_15_9_4_46]用户:bjy 登录成功
[NORMAL][MainServer.cpp-44][6_15_9_6_59]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_15_9_6_59]用户:bjy 登录成功
[NORMAL][MainServer.cpp-44][6_15_9_12_4]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_15_9_12_4]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_15_9_12_6]get a get username request
[INFO][MainServer.cpp-150][6_15_9_12_8]get a get username request
[NORMAL][MainServer.cpp-44][6_15_14_9_21]Get a sign request
[NORMAL][ModelLayer.hpp-108][6_15_14_9_21]用户:bjy 登录成功
[INFO][MainServer.cpp-150][6_15_14_9_23]get a get username request
[INFO][MainServer.cpp-150][6_15_14_9_25]get a get username request
[WARINNG][DataBases.hpp-52][6_21_11_55_29]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_21_11_55_30]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_21_12_5_11]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_21_12_5_23]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_21_12_59_25]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_21_12_59_27]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_23_2_48_46]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_23_2_55_1]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_23_6_11_48]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_23_6_15_2]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_23_12_0_26]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_23_12_0_28]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_24_8_32_40]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_24_8_32_40]select * from joblist 执行失败
[WARINNG][DataBases.hpp-52][6_24_8_35_2]select * from questionlist 执行失败
[WARINNG][DataBases.hpp-52][6_24_8_35_3]select * from joblist 执行失败
[NORMAL][DataBases.hpp-192][6_26_1_45_2]Successfully linked MySQL
[NORMAL][LoadBalancer.hpp-77][6_26_1_45_2]Successfully loaded configuration file: ./conf/ServerHost.conf
[WARINNG][DataBases.hpp-52][6_28_19_31_3]select * from joblist 执行失败
